function [vol error_m]=tom_av2_post_processing(align2d,iter_num,vol);


if (exist('model','dir')==0)
    mkdir model;
end

symmetry=align2d(iter_num,1).model.sym;
sym_angle=align2d(iter_num,1).model.sym_angle;
mass=align2d(iter_num,1).model.mass;
pixel_size=align2d(iter_num,1).model.pixel_size;

masksp_radius=align2d(iter_num,1).filter.spmask_model(1);
masksp_sigma=align2d(iter_num,1).filter.spmask_model(2);
maskcy_radius=align2d(iter_num,1).filter.cymask_model(1);
maskcy_sigma=align2d(iter_num,1).filter.cymask_model(2);

file_path=align2d(iter_num,1).file_path;


error_m=0;
%vol=tom_symref(vol,symmetry,'C2',sym_angle);

tom_emwrite([file_path '/model/model_' num2str(iter_num)],vol);

vol=vol.*tom_spheremask(ones(size(vol)),masksp_radius,masksp_sigma);
%[a b vol]=tom_calc_isosurface(-tom_norm(vol,1),mass,pixel_size,0.01);
[a b vol]=tom_calc_isosurface(tom_norm(-vol,1),mass,pixel_size,0.01);
%vol=vol.*tom_spheremask(ones(size(vol)),35,masksp_sigma);
xxx= ones(size(vol));
yyy = tom_cylindermask(xxx,maskcy_radius,maskcy_sigma,(size(vol)./2)+1);
vol=tom_rotate(yyy,[270 90 90]).*vol~=0.*tom_spheremask(ones(size(vol)),masksp_radius,masksp_sigma);
vol=-vol;
tom_norm(vol,1);
