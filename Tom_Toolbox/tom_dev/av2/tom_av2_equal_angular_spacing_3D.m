function angle_list = tom_av2_equal_angular_spacing_3D(step,plot)
    %% function generates almost equidistant rotations angles 
    %  phi and theta are received by the two angles which define 
    %  the vectors on a unit sphere. The distance between neighbor vectors are   
    %  alsmost equal. The last angle psi is generated by just deviding 360 dregree
    %  by the rotation step 
    %  step size in degree
    %  theta has a maximum of 180 degrees on a full sphere
    %  psi runs from 0 to 360 degrees

    if(nargin <2)
        plot = 'false';
    end
  
    psi_theta_rotations = tom_av2_equal_angular_spacing([0 180],[-180 180],step,'xmipp');
    % adding last angle manually, because it is missing in the list 
    psi_theta_rotations(size(psi_theta_rotations,1)+1,:) = [0,180];
    % shifting from 0 to 360 degrees to -180 to 180 in z rotation
    psi_theta_rotations = shift_psi_angles(psi_theta_rotations); 
    
    angle_list          = add_phi_rotations(psi_theta_rotations,step);
    if(strcmp(plot,'true'))
        fprintf('number of rotation triples: %d\n', length(angle_list));
       plot_angles_dist(psi_theta_rotations);
    end
end    
 
function result = shift_psi_angles(psi_theta_rotations)
    for i=1:length(psi_theta_rotations)
        if(psi_theta_rotations(i,1) > 180)
            psi_theta_rotations(i,1) = psi_theta_rotations(i,1) - 360;
        end
    end
    result = sortrows(psi_theta_rotations,[2 1]);
end

function result = add_phi_rotations(psi_theta_rotations,step)
    phi_step = 180/floor(180/step);
    phi_rotations = zeros(360/phi_step);
    nextRotation = -180 + phi_step;
    ii = 1;    
    while (nextRotation <= 180)
       phi_rotations(ii) = nextRotation;
       nextRotation = nextRotation + phi_step;
       ii = ii +1;
    end;
    numberOfPsiTheta = size(psi_theta_rotations,1);
    numberOfPhi = length(phi_rotations);
    result = zeros(numberOfPsiTheta * numberOfPhi,3);
    index = 1;
    for ii = 1:numberOfPsiTheta
        for jj = 1:numberOfPhi
            result(index,1) = phi_rotations(jj);          %phi
            result(index,2) = psi_theta_rotations(ii,1);  %psi 
            result(index,3) = psi_theta_rotations(ii,2);  %theta
            index = index +1;
        end
    end
end 

function plot_angles_dist(angle_list)
   
    bg_angle_list = angle_list .* (pi/180);

    figure; polar(bg_angle_list(:,1),sin(bg_angle_list(:,2)),'*');

    xx = cos(bg_angle_list(:,1)) .* sin(bg_angle_list(:,2)); 
    yy = sin(bg_angle_list(:,1)) .* sin(bg_angle_list(:,2)); 
    zz = cos(bg_angle_list(:,2));

    figure;plot3(xx,yy,zz,'*');
end

