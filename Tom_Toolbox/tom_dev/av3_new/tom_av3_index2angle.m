function [angle_out] = tom_av3_index2angle(index, angle_start, angular_incr,angle_end)
%TOM_AV3_INDEX2ANGLE creates Euler angles from molmatch indices
%
%   [angle_out] = tom_av3_index2angle(index, angle_start, angular_incr,angle_end)
%
%   if phi_start, psi_start, and theta_start are not given they are set to zero.
%   angles mod(angular_incr) has to be zero!
%
%   routine determines Euler angles phi, psi, and theta from a given
%   index. index is assumed to be generated by loop, from inner to outer: phi, psi, theta,
%   lowest index is zero.
%
%PARAMETERS
%
%  INPUT
%   index               loop number to be converted into Euler angles
%   angle_start         [phi_increment psi_increment theta_increment] as vector
%   angular_incr        [phi_increment psi_increment theta_increment] as vector
%   angle_end           [phi_end psi_end theta_end] phi psi and theta choosen as start value as vector
%  
%  OUTPUT
%   angle_out           [phi psi theta] angle corresponding to INDEX as vector
%
%EXAMPLE
%   ... = tom_av3_index2angle(...);
%   creates ...
%
%REFERENCES
%
%SEE ALSO
%   molmatch.exe (MPI c-program), omnimatch.exe, AV3_CREAMOTL
%
%   created by FF 08/09/02
%   updated by FF 03/31/05
%
%   Nickell et al., 'TOM software toolbox: acquisition and analysis for electron tomography',
%   Journal of Structural Biology, 149 (2005), 227-234.
%
%   Copyright (c) 2004-2007
%   TOM toolbox for Electron Tomography
%   Max-Planck-Institute of Biochemistry
%   Dept. Molecular Structural Biology
%   82152 Martinsried, Germany
%   http://www.biochem.mpg.de/tom


nangle=(angle_end-angle_start)./(angular_incr)+1;

angle_out(3) = floor(index /(nangle(1).*nangle(2)));
rest = index - angle_out(3).*(nangle(1).*nangle(2));
angle_out(2) = floor(rest/nangle(1));
angle_out(1) = rest - angle_out(2).*nangle(1);

angle_out = angle_out .*angular_incr + angle_start; 





