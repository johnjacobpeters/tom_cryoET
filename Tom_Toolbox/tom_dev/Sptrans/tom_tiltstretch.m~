function o=tom_tiltstretch(i,Tiltaxis,phi_current,phi_previous);
%TOM_TILTSTRETCH applies an projective stretch to an image
%
%   o=tom_tiltstretch(i,Tiltaxis,phi_current,phi_previous)
%
%PARAMETERS
%
%  INPUT
%   filelabel           ...
%   threshold           ...
%   label               ...
%   color               ...
%   transformmatrix     ...
%   iconposition        ...
%   host                ...
%  
%  OUTPUT
%   data		...
%
%EXAMPLE
%   tom_amira_createisosurface(...);
%   creates ...
%
%REFERENCES
%
%SEE ALSO
%   ...
%
%   created by ... (author date)
%   updated by ...
%
%   Nickell et al., 'TOM software toolbox: acquisition and analysis for electron tomography',
%   Journal of Structural Biology, 149 (2005), 227-234.
%
%   Copyright (c) 2004-2007
%   TOM toolbox for Electron Tomography
%   Max-Planck-Institute of Biochemistry
%   Dept. Molecular Structural Biology
%   82152 Martinsried, Germany
%   http://www.biochem.mpg.de/tom





% tom_tiltstretch applies an projective stretch to an image.
%
% Syntax: o=tom_tiltstretch(i,Tiltaxis,phi_current,phi_previous);
%
% with i: input projection image, phi_current as actual tiltangle
% and phi_previous as previous projection image
%
% SN, 09/03/05
%
%   Copyright (c) 2004
%   TOM toolbox for Electron Tomography
%   Max-Planck-Institute for Biochemistry
%   Dept. Molecular Structural Biology
%   82152 Martinsried, Germany
%   http://www.biochem.mpg.de/tom

AngleFactor=1;
Tiltaxis=Tiltaxis.*pi./180;
phi_current=phi_current.*pi./180;
phi_previous=phi_previous.*pi./180;

SF=cos(phi_previous.*AngleFactor)./cos(phi_current.*AngleFactor);

B0=1+((SF-1).*sin(Tiltaxis).*sin(Tiltaxis));
B1=1+((SF-1).*cos(Tiltaxis).*cos(Tiltaxis));
B2=(1-SF).*cos(Tiltaxis).*sin(Tiltaxis);
dimx=size(i,1);
dimy=size(i,2);
o=zeros(size(i));
o=o+mean2(i);
B3=dimx./2.*(B0+B2-1);
B4=dimy./2.*(B2+B1-1);


for laufx=1:.5:dimx+.499
    for laufy=1:.5:dimy+.499
        newx=round((laufx.*B0)+(B2.*laufy-B3));
        newy=round((laufx.*B2)+(B1.*laufy-B4));
        if(newx>0 && newx<dimx && newy>0 && newy<dimy)
            o(newx,newy)=i(round(laufx),round(laufy));
        end;
    end;
end;
