function [phi, psi, theta] = av3_index2angle(index, phi_end, psi_end, theta_end, angular_incr, ...
    phi_start, psi_start, theta_start)
% AV3_INDEX2ANGLE creates Euler angles from oscar indices
%
%   [phi, psi, theta] = av3_index2angle(index, phi_end, psi_end, theta_end, angular_incr, ...
%       phi_start, psi_start, theta_start)
%
%   if phi_start, psi_start, and theta_start are not given they are set to zero.
%   angles mod(angular_incr) has to be zero!
%
%
%   routine determines Euler angles phi, psi, and theta from a given
%   index. index is assumed to be generated by loop, from inner to outer: phi, psi, theta,
%   lowest index is zero.
%   
%   
%   see also
%   oscar(MPI c-program)
%
%   start 08/09/02 FF
error(nargchk(5,8,nargin))
if (nargin < 6)
    phi_start = 0;
end;
if (nargin < 7)
    psi_start = 0;
end;
if (nargin < 8)
    theta_start = 0;
end;

nphi = (phi_end-phi_start)/angular_incr + 1;
npsi = (psi_end-psi_start)/angular_incr + 1;
ntheta = (theta_end-theta_start)/angular_incr + 1;

theta = floor(index /(nphi*npsi));
rest = index - theta*(nphi*npsi);
psi = floor(rest/nphi);
phi = rest - psi*nphi;
phi = phi * angular_incr + phi_start; psi = psi * angular_incr + psi_start; 
theta = theta * angular_incr + theta_start; 
%[phi, psi, theta] = angular_incr.* [phi, psi, theta]
%+ [phi_start, psi_start, theta_start];
